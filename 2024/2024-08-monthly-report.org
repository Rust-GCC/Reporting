#+title:  Monthly Report for August 2024
#+author: Philip Herron, Pierre-Emmanuel Patry and Arthur Cohen
#+date:   2024-09-02

** Overview

Thanks again to [[https://opensrcsec.com/][Open Source Security, inc]] and [[https://www.embecosm.com/][Embecosm]] for their ongoing support for this project.

*** Project update

This month saw really good progress in terms of the number of merged PRs, issues completed, and testcases added. All three Google Summer of Code projects got completed, which required extensive reviewing. Our three students passed the final evaluation brillantly, and are all interested in continuing to contribute to the compiler in their free time. We are very happy to have them join the team, and are looking forward to their future work. We have offered to help mentor them in the future, as well as to help with any compiler-related studies they might have. As a reminder, anyone interested in contributing to the project will be able to receive similar help and mentoring.

In fact, we are currently working with another student outside of GSoC to put together a testsuite and testing program which will help us assert that ~gccrs~ produces code with correct semantics (as a reminder, correct means "with ~rustc~'s semantics"). It is important for ~gccrs~ to only accept the correct subset of code, but it is also necessary that the assembly we produce has the same meaning and the same runtime characteristics as any other Rust program. This ties into our pursuit of producing a "correct" compiler, which we'll talk about more in a future blogpost in cooperation with the Rust project.

In terms of technical contributions, we have closed the ~Unhandled attributes~ milestone, which covered the handling of all attributes required for compiling ~core 1.49~. We have made good progress on the ~Lang items~ milestone, with the only remaining step being to switch our existing code generation of lang item paths to these new paths we introduced. This will help all of our early code generation pipeline, namely surrounding built-in macros and the desugaring of certain constructs like ~for~ loops. Once this is done, we will fix the issues surrounding iterators and indexing, which currently prevent ~for~ loops from being completely implemented. We have gained a few new contributors this summer, and we hope that this trend continues. We hope they continue to contribute to the project, and will spend some time this week to try and help with the codebase when necessary.

Finally, we would like to be more public about ~gccrs~'s progress. In some recent comments surrounding the Rust-for-Linux project, we have noted that some internauts believe that the work on the compiler has slowed down, despite our regular upstreaming and progress reports. We think this might be due to a lack of activity on social media and forums such as Reddit or HackerNews, and will start posting our monthly updates there again. We will also be coming out with a few blogposts in the coming weeks, namely around the progress achieved by our GSoC students and how it will impact users.

*** Community call

We will have our next monthly community call on the 12th of August at 9am UTC. You can subscribe to our calendar
to see when the next one will be held. The call is open to everyone, even if you would just
like to sit-in and listen. You can also subscribe to our [[https://gcc.gnu.org/mailman/listinfo/gcc-rust][mailing-list]] or join our [[https://gcc-rust.zulipchat.com][Zulip chat]] to
be notified of upcoming events.

- [[https://meet.jit.si/gccrs-community-call-august][Jitsi link]]
- Calendar ID: 7060a0923ffebd3cb52b1afef35a28ff7b64f05962c9af84c23b1847f1f5f894@group.calendar.google.com
- [[https://calendar.google.com/calendar/embed?src=7060a0923ffebd3cb52b1afef35a28ff7b64f05962c9af84c23b1847f1f5f894%40group.calendar.google.com][Google calendar link]]
- [[https://calendar.google.com/calendar/ical/7060a0923ffebd3cb52b1afef35a28ff7b64f05962c9af84c23b1847f1f5f894%40group.calendar.google.com/public/basic.ics][iCal link]]

** Call for contribution

- [[https://github.com/Rust-GCC/gccrs/issues/3001][Issue 3001: Generic arguments are not disambiguated on error propagation expressions]]

Our error propagation expressions (expressions which use the question mark operator, of the form ~<expr>?~) are currently forgotten in many of our AST visitors. As a result, there are unexpected cases when it comes to various parts of the compiler pipeline handling them. In that particular case, the function call's generic arguments are not disambiguated - the compiler does not know if it needs to be handling a generic type, or a const generic value. You will need to add handling to our name resolution pass for these error propagation expressions. It would be helpful to look at [[https://github.com/Rust-GCC/gccrs/blob/75049a3bfee8c3f888994bce3b741a805c631c2a/gcc/rust/resolve/rust-ast-resolve-type.cc#L568][the current generic disambiguation]] to start figuring out where it is called from, and where you need to call it.

** Completed Activities

- gccrs: emit error code for E0758                   [[https://github.com/rust-gcc/gccrs/pull/3145][PR3145]]
- Add glibcxx_assertion check                        [[https://github.com/rust-gcc/gccrs/pull/3138][PR3138]]
- Fix feature gate visitor                           [[https://github.com/rust-gcc/gccrs/pull/3136][PR3136]]
- attributes: Start handling prelude_import properly [[https://github.com/rust-gcc/gccrs/pull/3135][PR3135]]
- Fix the disorder struct and class in inline asm    [[https://github.com/rust-gcc/gccrs/pull/3133][PR3133]]
- Attempted to access a nonexistent field [`E0609`]  [[https://github.com/rust-gcc/gccrs/pull/3131][PR3131]]
- Better move errors                                 [[https://github.com/rust-gcc/gccrs/pull/3130][PR3130]]
- Fixed testcase                                     [[https://github.com/rust-gcc/gccrs/pull/3128][PR3128]]
- Add check for path patterns.                       [[https://github.com/rust-gcc/gccrs/pull/3125][PR3125]]
- rust: avoid clobbering LIBS                        [[https://github.com/rust-gcc/gccrs/pull/3121][PR3121]]
- Add running cicd 32bit                             [[https://github.com/rust-gcc/gccrs/pull/3119][PR3119]]
- Add error message for E0532                        [[https://github.com/rust-gcc/gccrs/pull/3118][PR3118]]
- Fix 32-bits builds                                 [[https://github.com/rust-gcc/gccrs/pull/3114][PR3114]]
- Better subset errors                               [[https://github.com/rust-gcc/gccrs/pull/3113][PR3113]]
- Improve compressed point bit manipulation          [[https://github.com/rust-gcc/gccrs/pull/3112][PR3112]]
- Add check for union patterns                       [[https://github.com/rust-gcc/gccrs/pull/3110][PR3110]]
- Inline asm resolve expr                            [[https://github.com/rust-gcc/gccrs/pull/3109][PR3109]]
- Eager expansion for include* #1805 #1865           [[https://github.com/rust-gcc/gccrs/pull/3107][PR3107]]
- New test directories for mbe macros and builtins   [[https://github.com/rust-gcc/gccrs/pull/3105][PR3105]]
- Inline asm hir pipeline                            [[https://github.com/rust-gcc/gccrs/pull/3103][PR3103]]
- Remove dependency on nightly Rust                  [[https://github.com/rust-gcc/gccrs/pull/3101][PR3101]]
- Fixed bitwise operation in `extract_stmt`          [[https://github.com/rust-gcc/gccrs/pull/3100][PR3100]]
- Fix the parser's operand and flags storage         [[https://github.com/rust-gcc/gccrs/pull/3098][PR3098]]
- Better loan errors                                 [[https://github.com/rust-gcc/gccrs/pull/3088][PR3088]]
- Add `lang-item` paths                              [[https://github.com/rust-gcc/gccrs/pull/3068][PR3068]]
- Asm generic il codegen                             [[https://github.com/rust-gcc/gccrs/pull/3060][PR3060]]
- borrowck: Added location support to BIR nodes      [[https://github.com/rust-gcc/gccrs/pull/3013][PR3013]]
- Fix LIBS override in upstream                      [[https://github.com/Rust-GCC/gccrs/issues/3120][Issue 3120]]

*** Contributors this month

- [[https://github.com/liamnaddell][Liam Naddell]]
- [[https://github.com/tamaroning][Raiki Tamura]]
- [[https://github.com/mahadmuhammad][Mahad Muhammad]]
- [[https://github.com/braw-lee][Kushal Pal]]
- [[https://github.com/badumbatish][Jasmine Tang]]
- [[https://github.com/tschwinge][Thomas Schwinge]]
- [[https://github.com/dkm][Marc Poulhi√®s]]
- [[https://github.com/P-E-P][Pierre-Emmanuel Patry]]
- [[https://github.com/CohenArthur][Arthur Cohen]]

*** Overall Task Status

| Category    | Last Month | This Month | Delta |
|-------------+------------+------------+-------|
| TODO        |        338 |        338 |     - |
| In Progress |         71 |         70 |    -1 |
| Completed   |        856 |        872 |   +16 |

*** Test Cases

| TestCases | Last Month | This Month | Delta |
|-----------+------------+------------+-------|
| Passing   | 8557       | 8629       | +72   |
| Failed    | -          | -          | -     |
| XFAIL     | 72         | 70         | -2    |
| XPASS     | -          | -          | -     |

*** Bugs

| Category    | Last Month | This Month | Delta |
|-------------+------------+------------+-------|
| TODO        |        125 |        128 |    +3 |
| In Progress |         38 |         37 |    -1 |
| Completed   |        424 |        429 |    +5 |

*** Milestones Progress
 
| Milestone                         | Last Month | This Month | Delta | Start Date    | Completion Date | Target        | Target GCC |
|-----------------------------------|------------|------------|-------|---------------|-----------------|---------------|------------|
| GCC 14.2                          |       100% |       100% |     - |  7th Jun 2024 |   15th Jun 2024 | 15th Jun 2024 |   GCC 14.2 |
| GCC 15.1                          |       100% |       100% |     - | 21st Jun 2024 |   31st Jun 2024 |  1st Jul 2024 |   GCC 15.1 |
| Name resolution 2.0 rework        |         6% |         6% |     - |  1st Jun 2024 |               - |  1st Apr 2025 |   GCC 15.1 |
| Macro expansion                   |        15% |        18% |   +3% |  1st Jun 2024 |               - |  1st Jan 2025 |   GCC 15.1 |
| Unhandled attributes              |        80% |       100% |  +20% |  1st Jul 2024 |   15th Aug 2024 | 15th Aug 2024 |   GCC 15.1 |
| Lang items                        |         0% |        66% |  +66% |  1st Jul 2024 |               - |  1st Sep 2024 |   GCC 15.1 |
 
| Upcoming Milestone                | Last Month | This Month | Delta | Start Date    | Completion Date | Target        | Target GCC |
|-----------------------------------|------------|------------|-------|---------------|-----------------|---------------|------------|
| Indexing fixes                    |         0% |         0% |     - | 21st Jul 2024 |               - | 15th Sep 2024 |   GCC 15.1 |
| Iterator fixes                    |         0% |         0% |     - | 21st Jul 2024 |               - | 15th Sep 2024 |   GCC 15.1 |
| Auto traits improvements          |         0% |         0% |     - | 15th Sep 2024 |               - | 21st Oct 2024 |   GCC 15.1 |
| Deref and DerefMut improvements   |         0% |         0% |     - | 28th Sep 2024 |               - | 28th Oct 2024 |   GCC 15.1 |
| Remaining typecheck issues        |         0% |         0% |     - | 21st Oct 2024 |               - |  1st Jan 2025 |   GCC 15.1 |
| cfg-core                          |         0% |         0% |     - |  1st Dec 2024 |               - |  1st Jan 2025 |   GCC 15.1 |
| Question mark operator            |         0% |         0% |     - | 15th Dec 2024 |               - | 21st Feb 2025 |   GCC 15.1 |
| Codegen fixes                     |         0% |         0% |     - |  7th Oct 2024 |               - |  1st Mar 2025 |   GCC 15.1 |
| Specialization                    |         0% |         0% |     - |  1st Jan 2025 |               - |  1st Mar 2025 |   GCC 15.1 |
| Inline assembly                   |         0% |       100% | +100% |  1st Jun 2024 |   26th Aug 2024 | 15th Sep 2024 |   GCC 15.1 |
| Borrow checker improvements       |         0% |       100% | +100% |  1st Jun 2024 |   26th Aug 2024 | 15th Sep 2024 |   GCC 15.1 |
| Rustc Testsuite Adaptor           |         0% |         0% |     - |  1st Jun 2024 |               - | 15th Sep 2024 |   GCC 15.1 |
| black_box intrinsic               |         0% |         0% |     - | 28th Oct 2024 |               - | 28th Nov 2024 |   GCC 15.1 |
| Unstable RfL features             |         0% |         0% |     - |  7th Jan 2025 |               - |  1st Mar 2025 |   GCC 15.1 |
| cfg-rfl                           |         0% |         0% |     - |  7th Jan 2025 |               - | 15th Feb 2025 |   GCC 15.1 |
| alloc parser issues               |       100% |       100% |     - |  7th Jan 2025 |   31st Jun 2024 | 28th Jan 2025 |   GCC 15.1 |
| let-else                          |         0% |         0% |     - | 28th Jan 2025 |               - | 28th Feb 2025 |   GCC 15.1 |
| Explicit generics with impl Trait |         0% |         0% |     - | 28th Feb 2025 |               - | 28th Mar 2025 |   GCC 15.1 |
| offset_of!() builtin macro        |         0% |         0% |     - | 15th Mar 2025 |               - | 15th May 2025 |   GCC 15.1 |
| Generic Associated Types          |         0% |         0% |     - | 15th Mar 2025 |               - | 15th Jun 2025 |   GCC 16.1 |
| RfL const generics                |         0% |         0% |     - |  1st May 2025 |               - | 15th Jun 2025 |   GCC 16.1 |
| frontend plugin hooks             |         0% |         0% |     - | 15th May 2025 |               - |  7th Jul 2025 |   GCC 16.1 |
| Handling the testsuite issues     |         0% |         0% |     - | 15th Sep 2024 |               - | 15th Sep 2025 |   GCC 16.1 |
| std parser issues                 |       100% |       100% |     - |  7th Jan 2025 |   31st Jun 2024 | 28th Jan 2025 |   GCC 16.1 |
| main shim                         |         0% |         0% |     - | 28th Jul 2025 |               - | 15th Sep 2025 |   GCC 16.1 |

| Past Milestone                    | Last Month | This Month | Delta | Start Date    | Completion Date | Target        | Target GCC |
|-----------------------------------+------------+------------+-------+---------------+-----------------+---------------|------------|
| Data Structures 1 - Core          |       100% |       100% | -     | 30th Nov 2020 | 27th Jan 2021   | 29th Jan 2021 |   GCC 14.1 |
| Control Flow 1 - Core             |       100% |       100% | -     | 28th Jan 2021 | 10th Feb 2021   | 26th Feb 2021 |   GCC 14.1 |
| Data Structures 2 - Generics      |       100% |       100% | -     | 11th Feb 2021 | 14th May 2021   | 28th May 2021 |   GCC 14.1 |
| Data Structures 3 - Traits        |       100% |       100% | -     | 20th May 2021 | 17th Sep 2021   | 27th Aug 2021 |   GCC 14.1 |
| Control Flow 2 - Pattern Matching |       100% |       100% | -     | 20th Sep 2021 |  9th Dec 2021   | 29th Nov 2021 |   GCC 14.1 |
| Macros and cfg expansion          |       100% |       100% | -     |  1st Dec 2021 | 31st Mar 2022   | 28th Mar 2022 |   GCC 14.1 |
| Imports and Visibility            |       100% |       100% | -     | 29th Mar 2022 | 13th Jul 2022   | 27th May 2022 |   GCC 14.1 |
| Const Generics                    |       100% |       100% | -     | 30th May 2022 | 10th Oct 2022   | 17th Oct 2022 |   GCC 14.1 |
| Initial upstream patches          |       100% |       100% | -     | 10th Oct 2022 | 13th Nov 2022   | 13th Nov 2022 |   GCC 14.1 |
| Upstream initial patchset         |       100% |       100% | -     | 13th Nov 2022 | 13th Dec 2022   | 19th Dec 2022 |   GCC 14.1 |
| Update GCC's master branch        |       100% |       100% | -     |  1st Jan 2023 | 21st Feb 2023   |  3rd Mar 2023 |   GCC 14.1 |
| Final set of upstream patches     |       100% |       100% | -     | 16th Nov 2022 |  1st May 2023   | 30th Apr 2023 |   GCC 14.1 |
| Borrow Checking 1                 |       100% |       100% | -     | TBD           |  8th Jan 2024   | 15th Aug 2023 |   GCC 14.1 |
| Procedural Macros 1               |       100% |       100% | -     | 13th Apr 2023 | 6th Aug 2023    |  6th Aug 2023 |   GCC 14.1 |
| GCC 13.2 Release                  |       100% |       100% | -     | 13th Apr 2023 | 22nd Jul 2023   | 15th Jul 2023 |   GCC 14.1 |
| GCC 14 Stage 3                    |       100% |       100% | -     |  1st Sep 2023 | 20th Sep 2023   |  1st Nov 2023 |   GCC 14.1 |
| GCC 14.1 Release                  |       100% |       100% | -     |  2nd Jan 2024 |  2nd Jun 2024   | 15th Apr 2024 |   GCC 14.1 |
| format_args!() support            |       100% |       100% | -     | 15th Feb 2024 | -               |  1st Apr 2024 |   GCC 14.1 |

** Planned Activities

- Start adding Detailed Changelogs to the reports again
- Be more public about the compiler's progress

*** Risks

There have been no changes to the Risk table this month

| Risk                                          | Impact (1-3) | Likelihood (0-10) | Risk (I * L) | Mitigation                                                      |
|-----------------------------------------------+--------------+-------------------+--------------+-----------------------------------------------------------------|
| Missing features for GCC 15.1 deadline        |            2 |                 1 |            2 | Start working on required features as early as July (6mo ahead) |

** Detailed changelog
