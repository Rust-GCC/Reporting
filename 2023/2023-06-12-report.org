#+title:  Weekly report for 5th of June 2023 to 12th of June 2023
#+author: Philip Herron and Arthur Cohen
#+date:   2023-06-12

** Overview

Thanks again to [[https://opensrcsec.com/][Open Source Security, inc]] and [[https://www.embecosm.com/][Embecosm]] for their ongoing support for this project.

*** Milestone Progress

This week saw the start of the Unicode Support GSoC project, with some changes being made to ~libcpp~ - the C pre-processor library. These changes will need to be upstreamed and reviewed, but they should prove useful to other frontends which have had to implement similar functions in the past.
A major Procedural Macro pull-request has been merged, bringing proper expansion of these macros to the compiler. The loading of these external binaries and dynamic procedure calls are implemented properly, and the AST fragments generated are being inserted in the current AST, meaning that most of the functionality is present. What remains is for Pierre-Emmanuel to perform name resolution of the external crates and procedural macros being used, which ties in with Arthur's work on macro imports and glob imports. All in all, this should help fix the two major remaining issues for proper expansion of the ~core~ crate. Philip is still working on the typesystem, bringing us closer and closer to completion of the ~HIR Pipeline 1.49~ milestone.

** Completed Activities

- gccrs: introduce new types_compatable [[https://github.com/rust-gcc/gccrs/pull/2285][PR2285]]
- gccrs: Respect the concrete type when resolving qualifed path types [[https://github.com/rust-gcc/gccrs/pull/2271][PR2271]]
- Allow parsing a borrow from struct expression [[https://github.com/rust-gcc/gccrs/pull/2270][PR2270]]
- Fix warning generated by Optional [[https://github.com/rust-gcc/gccrs/pull/2269][PR2269]]
- Handle crate metavariable [[https://github.com/rust-gcc/gccrs/pull/2267][PR2267]]
- ast: dump literals correctly [[https://github.com/rust-gcc/gccrs/pull/2265][PR2265]]
- Add handling of unimplemented derive macros. [[https://github.com/rust-gcc/gccrs/pull/2262][PR2262]]
- builtin-derive-macros: Add dummy builtin transcriber for builtin derive macros. [[https://github.com/rust-gcc/gccrs/pull/2258][PR2258]]
- Handle file loading from "non-mod-rs" files properly [[https://github.com/rust-gcc/gccrs/pull/2227][PR2227]]
- fixup: Fix bootstrap build [[https://github.com/rust-gcc/gccrs/pull/2183][PR2183]]

*** Contributors this week

- [[https://github.com/charmitro][Charalampos Mitrodimas]] (new contributor!)
- [[https://github.com/P-E-P][Pierre-Emmanuel Patry]]
- [[https://github.com/powerboat9][Owen Avery]]

*** Overall Task Status

| Category    | Last Week | This Week | Delta |
|-------------+-----------+-----------+-------|
| TODO        |       227 |       228 |    +1 |
| In Progress |        49 |        51 |    +2 |
| Completed   |       670 |       674 |    +4 |

*** Test Cases

| TestCases | Last Week | This Week | Delta |
|-----------+-----------+-----------+-------|
| Passing   | 7924      | 7933      |    +9 |
| Failed    | -         | -         |     - |
| XFAIL     | 53        | 53        |     - |
| XPASS     | -         | -         |     - |

*** Bugs

| Category    | Last Week | This Week | Delta |
|-------------+-----------+-----------+-------|
| TODO        |        72 |        70 |    -2 |
| In Progress |        26 |        26 |     - |
| Completed   |       327 |       331 |    +4 |

*** Milestones Progress

Note that the intrinsics milestone percentage on github is not representative: It shows a 73% completion rate, but does not take into account the tracking issues with dozens of unresolved items.
Thus the percentage is computed using the sum of issues and tracked items done divided by the sums of issues and tracked items overall.

| Milestone                         | Last Week | This Week | Delta | Start Date    | Completion Date | Target        |
|-----------------------------------+-----------+-----------+-------+---------------+-----------------+---------------|
| Data Structures 1 - Core          |      100% |      100% | -     | 30th Nov 2020 | 27th Jan 2021   | 29th Jan 2021 |
| Control Flow 1 - Core             |      100% |      100% | -     | 28th Jan 2021 | 10th Feb 2021   | 26th Feb 2021 |
| Data Structures 2 - Generics      |      100% |      100% | -     | 11th Feb 2021 | 14th May 2021   | 28th May 2021 |
| Data Structures 3 - Traits        |      100% |      100% | -     | 20th May 2021 | 17th Sep 2021   | 27th Aug 2021 |
| Control Flow 2 - Pattern Matching |      100% |      100% | -     | 20th Sep 2021 |  9th Dec 2021   | 29th Nov 2021 |
| Macros and cfg expansion          |      100% |      100% | -     |  1st Dec 2021 | 31st Mar 2022   | 28th Mar 2022 |
| Imports and Visibility            |      100% |      100% | -     | 29th Mar 2022 | 13th Jul 2022   | 27th May 2022 |
| Const Generics                    |      100% |      100% | -     | 30th May 2022 | 10th Oct 2022   | 17th Oct 2022 |
| Initial upstream patches          |      100% |      100% | -     | 10th Oct 2022 | 13th Nov 2022   | 13th Nov 2022 |
| Upstream initial patchset         |      100% |      100% | -     | 13th Nov 2022 | 13th Dec 2022   | 19th Dec 2022 |
| Update GCC's master branch        |      100% |      100% | -     |  1st Jan 2023 | 21st Feb 2023   |  3rd Mar 2023 |
| Final set of upstream patches     |      100% |      100% | -     | 16th Nov 2022 |  2nd May 2023   | 30th Apr 2023 |
| Borrow Checking 1                 |        0% |        0% | -     | TBD           | -               | 15th Aug 2023 |
| AST Pipeline for libcore 1.49     |       51% |       53% | +2%   | 13th Apr 2023 | -               |  1st Jun 2023 |
| HIR Pipeline for libcore 1.49     |       53% |       56% | +3%   | 13th Apr 2023 | -               | TBD           |
| Procedural Macros 1               |       70% |       69% | -1%   | 13th Apr 2023 | -               |  6th Aug 2023 |
| GCC 13.2 Release                  |       26% |       30% | +4%   | 13th Apr 2023 | -               | 15th Jul 2023 |
| GCC 14 Stage 3                    |        0% |        0% | -     | TBD           | -               |  1st Nov 2023 |
| Rustc Testsuite Prerequisistes    |        0% |        0% | -     | TBD           | -               |  1st Sep 2023 |
| Intrinsics and builtins           |       18% |       18% | -     |  6th Sep 2022 | -               | TBD           |
| Const Generics 2                  |        0% |        0% | -     | TBD           | -               | TBD           |
| Rust-for-Linux compilation        |        0% |        0% | -     | TBD           | -               | TBD           |

*** Risks

| Risk                                | Impact (1-3) | Likelihood (0-10) | Risk (I * L) | Mitigation                          |
|-------------------------------------+--------------+-------------------+--------------+-------------------------------------|
| `core` and `std` missing for GCC 14 |            2 |                 6 |           12 | Look at necessary unstable features |

** Planned Activities

- Look into glob use statements
- Look into remaining issues required for proper AST pipeline of libcore
- Start work on ~libcpp~ for our Unicode Support project

** Detailed changelog
