#+title:  Weekly report for 9th to 16th January 2023
#+author: Philip Herron and Arthur Cohen
#+date:   2023-01-16

** Overview

Thanks again to [[https://opensrcsec.com/][Open Source Security, inc]] and [[https://www.embecosm.com/][Embecosm]] for their ongoing support for this project.

*** Milestone Progress

This week marks the first weekly report of the year 2023, and one of the first week since November where we are back to code changes.

We have published a yearly report for 2022 which is available [[here][https://rust-gcc.github.io/reporting/2022-year-report.html]]. Thank you to everyone involved in the project in 2022, and looking forward to 2023!

We are in the process of planning out the next community call which will happen at the beginning of February. We will also be giving a talk at FOSDEM in the Rust devroom, on the 4th of February. We will be putting these events in the calendar and are looking forward to meeting you!

In other news, work on the new macro expansion system has started again and is in a good shape. Arthur has figured out how to perform eager builtin macro expansion in our new fixed point macro expansion system, and the changes should land shortly as we iron out the last few issues.
Most importantly, we have started the process of updating GCC's master branch with a later version of the Rust frontend. This work needs to be split into multiple tasks, for which you can follow the tracking issue [[https://github.com/Rust-GCC/gccrs/issues/1705][here]]. In short, we need to run through each commit since the end of August, make sure that it builds, and then write an appropriate Changelog entry for it before submitting it for review on the gcc-patches mailing list. This process is time-consuming but we are making good progress: half of the ~230 have been checked and fixed-up or squashed where necessary, and we are checking the remaining ones.

** Completed Activities

- Change how CompileVarDecl outputs Bvariable's [[https://github.com/rust-gcc/gccrs/pull/1736][PR1736]]
- Add get_locus function for abstract class MetaItemInner. [[https://github.com/rust-gcc/gccrs/pull/1734][PR1734]]
- diagnostics: Add underline for tokens in diagnostics. [[https://github.com/rust-gcc/gccrs/pull/1733][PR1733]]
- Improve type checking on let statements [[https://github.com/rust-gcc/gccrs/pull/1730][PR1730]]
- Add support for generics associated type binding [[https://github.com/rust-gcc/gccrs/pull/1724][PR1724]]
- format: Fix git whitespace errors [[https://github.com/rust-gcc/gccrs/pull/1717][PR1717]]
- rust: add bound parsing in parse_generic_arg. [[https://github.com/rust-gcc/gccrs/pull/1716][PR1716]]
- unsafe: check use of `target_feature` attribute [[https://github.com/rust-gcc/gccrs/pull/1711][PR1711]]
- Check const functions for mutable references [[https://github.com/rust-gcc/gccrs/pull/1709][PR1709]]
- Parse declarative macro (decl_macro 2.0) [[https://github.com/rust-gcc/gccrs/pull/1708][PR1708]]
- Fix frust very long typo [[https://github.com/rust-gcc/gccrs/pull/1707][PR1707]]

*** Contributors this week

- [[https://github.com/powerboat9][powerboat9]] (new contributor!)
- [[https://github.com/turingki][mxlol233]] (new contributor!)
- [[https://github.com/snprajwal][Prajwal S N]] (new contributor!)
- [[https://github.com/dme2][Dave Evans]]
- [[https://github.com/tamaroning][tamaron]]
- [[https://github.com/tschwinge][Thomas Schwinge]]
- [[https://github.com/dkm][Marc Poulhies]]

*** Overall Task Status

| Category    | Last Week | This Week | Delta |
|-------------+-----------+-----------+-------|
| TODO        |       186 |       192 |    +6 |
| In Progress |        32 |        33 |    +1 |
| Completed   |       500 |       507 |    +7 |

*** Test Cases

| TestCases | Last Week | This Week | Delta |
|-----------+-----------+-----------+-------|
| Passing   | 6976      | 5467      | -1509 |
| Failed    | -         | -         |     - |
| XFAIL     | 52        | 40        |   -12 |
| XPASS     | -         | -         |     - |

*** Bugs

| Category    | Last Week | This Week | Delta |
|-------------+-----------+-----------+-------|
| TODO        |        55 |        62 |    +7 |
| In Progress |        16 |        17 |    +1 |
| Completed   |       218 |       221 |    +3 |

*** Milestones Progress

We plan on adding more fine-grained milestones in between November and April as more themes of work will become apparent.

Note that the intrinsics milestone percentage on github is not representative: It shows a 69% completion rate, but does not take into account the tracking issues with dozens of unresolved items.
Thus the percentage is computed using the sum of issues and tracked items done divided by the sums of issues and tracked items overall.

| Milestone                         | Last Week | This Week | Delta | Start Date     | Completion Date | Target        |
|-----------------------------------+-----------+-----------+-------+----------------+-----------------+---------------|
| Data Structures 1 - Core          |      100% |      100% | -     | 30th Nov 2020  | 27th Jan 2021   | 29th Jan 2021 |
| Control Flow 1 - Core             |      100% |      100% | -     | 28th Jan 2021  | 10th Feb 2021   | 26th Feb 2021 |
| Data Structures 2 - Generics      |      100% |      100% | -     | 11th Feb 2021  | 14th May 2021   | 28th May 2021 |
| Data Structures 3 - Traits        |      100% |      100% | -     | 20th May 2021  | 17th Sept 2021  | 27th Aug 2021 |
| Control Flow 2 - Pattern Matching |      100% |      100% | -     | 20th Sept 2021 | 9th Dec 2021    | 29th Nov 2021 |
| Macros and cfg expansion          |      100% |      100% | -     | 1st Dec 2021   | 31st Mar 2022   | 28th Mar 2022 |
| Imports and Visibility            |      100% |      100% | -     | 29th Mar 2022  | 13th Jul 2022   | 27th May 2022 |
| Const Generics                    |      100% |      100% | -     | 30th May 2022  | 10th Oct 2022   | 17th Oct 2022 |
| Initial upstream patches          |      100% |      100% | -     | 10th Oct 2022  | 13th Nov 2022   | 13th Nov 2022 |
| Upstream initial patchset         |       78% |      100% | +22%  | 13th Nov 2022  | 13th Dec 2022   | 19th Dec 2022 |
| Update GCC's master branch        |         - |        0% | -     | 01st Jan 2023  | -               | 03rd Mar 2023 |
| Final set of upstream patches     |       21% |       31% | +10%  | 16th Nov 2022  | -               | 30th Apr 2023 |
| Intrinsics and builtins           |       18% |       18% | -     | 6th Sept 2022  | -               | TBD           |
| Borrow checking                   |        0% |        0% | -     | TBD            | -               | TBD           |
| Const Generics 2                  |        0% |        0% | -     | TBD            | -               | TBD           |
| Rust-for-Linux compilation        |        0% |        0% | -     | TBD            | -               | TBD           |

*** Risks

| Risk                           | Impact (1-3) | Likelihood (0-10) | Risk (I * L) | Mitigation                                     |
|--------------------------------+--------------+-------------------+--------------+------------------------------------------------|
| Missing GCC 13 upstream window |            2 |                 3 |            6 | Merge in GCC 14 and be proactive about reviews |

** Planned Activities

- Finish work on macro name resolution
- Start work on ~#[derive]~ macros
- Write Changelog entries for each commit to upstream
- Merge gccrs patches to GCC's master branch

** Detailed changelog
